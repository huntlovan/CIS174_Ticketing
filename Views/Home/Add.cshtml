@model TicketViewModel
@await Component.InvokeAsync("StatusButton", new { currentStatus = Model.CurrentTask.StatusId })
<h2>New Task</h2>

<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="Add" method="post">

    <div class="mb-3">
        <label asp-for="CurrentTask.Description" class="form-label">Description:</label>
        <input asp-for="CurrentTask.Description" class="form-control">
    </div>

    <div class="mb-3">
        <label asp-for="CurrentTask.TicketId" class="form-label">Sprint:</label>
        <select asp-for="CurrentTask.TicketId" class="form-select"
                asp-items="@(new SelectList(Model.Sprints, "SprintId", "Name"))">
            <option value=""></option>
        </select>
    </div>
        
   <div class="mb-3">
        <label asp-for="CurrentTask.DueDate" class="form-label">Due Date:</label>
        <input asp-for="CurrentTask.DueDate" class="form-control" type="text">
    </div>
 
    <div class="mb-3">
        <label asp-for="CurrentTask.StatusId" class="form-label">Status:</label>
        <select asp-for="CurrentTask.StatusId" class="form-select"
                asp-items="@(new SelectList(Model.Statuses, "StatusId", "Name"))">
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Add</button>
    <submit-button text="Save Ticket" css-class="btn btn-success"></submit-button>
    <a asp-action="Index" class="btn btn-primary">Cancel</a>
</form>